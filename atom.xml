<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liberty&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-15T16:22:36.370Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhouhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hibernate入门</title>
    <link href="http://yoursite.com/2017/07/03/Hibernate/"/>
    <id>http://yoursite.com/2017/07/03/Hibernate/</id>
    <published>2017-07-03T00:24:27.140Z</published>
    <updated>2017-10-15T16:22:36.370Z</updated>
    
    <content type="html"><![CDATA[<p>简单的学习了Hibernate框架,一句话:看起来蛮简单，操作起来各种坑。我就把简单的环境配置搭建一遍，再把自己对Hibernate的理解总结一下。<br><a id="more"></a></p>
<h3 id="Hibernate框架的概述"><a href="#Hibernate框架的概述" class="headerlink" title="Hibernate框架的概述"></a>Hibernate框架的概述</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* Hibernate是一个开放源代码的对象关系映射（ORM）框架，它对JDBC进行了非常轻量级的对象封装，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。 </div><div class="line">* Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序使用，也可以在Servlet/JSP的Web应用中使用。</div><div class="line">* Hibernate是轻量级JavaEE应用的持久层解决方案，是一个关系数据库ORM框架</div></pre></td></tr></table></figure>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>hibernate架包的下载[hibernate官网] (<a href="https://sourceforge.net/projects/hibernate/files/hibernate-orm/" target="_blank" rel="external">https://sourceforge.net/projects/hibernate/files/hibernate-orm/</a>)</p>
<h3 id="两个配置文件"><a href="#两个配置文件" class="headerlink" title="两个配置文件"></a>两个配置文件</h3><h2 id="hibernate-cfg-xml"><a href="#hibernate-cfg-xml" class="headerlink" title="hibernate.cfg.xml"></a>hibernate.cfg.xml</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">   &lt;hibernate-configuration&gt;</div><div class="line"></div><div class="line">	&lt;session-factory&gt;</div><div class="line">		//配置关于数据库连接的四个项 driverClass url username password（必须要，连接数据库的基本参数）</div><div class="line">		&lt;property name=<span class="string">"hibernate.connection.driver_class"</span>&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div class="line">		&lt;property name=<span class="string">"hibernate.connection.url"</span>&gt;jdbc:mysql://localhost:3306/hibernateTest?useUnicode=<span class="literal">true</span>&amp;amp;characterEncoding=UTF-8&lt;/property&gt;</div><div class="line">		&lt;property name=<span class="string">"hibernate.connection.username"</span>&gt;root&lt;/property&gt;</div><div class="line">		&lt;property name=<span class="string">"hibernate.connection.password"</span>&gt;123&lt;/property&gt;</div><div class="line"></div><div class="line">		//设置连接提供者(这个需要导入C3p0的连接池)</div><div class="line">		&lt;property name=<span class="string">"hibernate.connection.provider_class"</span>&gt;org.hibernate.connection.C3P0ConnectionProvider&lt;/property&gt;</div><div class="line">		// c3p0连接池的配置</div><div class="line">		&lt;property name=<span class="string">"hibernate.c3p0.max_size"</span>&gt;20&lt;/property&gt; //最大连接池 </div><div class="line">		&lt;property name=<span class="string">"hibernate.c3p0.min_size"</span>&gt;5&lt;/property&gt; //最小连接数</div><div class="line">		&lt;property name=<span class="string">"hibernate.c3p0.timeout"</span>&gt;120&lt;/property&gt; //超时 </div><div class="line">		&lt;property name=<span class="string">"hibernate.c3p0.idle_test_period"</span>&gt;3000&lt;/property&gt; //空闲连接 </div><div class="line"></div><div class="line">		&lt;property name=<span class="string">"hibernate.show_sql"</span>&gt;<span class="literal">true</span>&lt;/property&gt;  //可以将向数据库发送的sql显示出来</div><div class="line">		&lt;property name=<span class="string">"hibernate.format_sql"</span>&gt;<span class="literal">true</span>&lt;/property&gt;  //格式化sql</div><div class="line"></div><div class="line">		//hibernate的方言（必须要,hibernate根据不同的数据库底层进行对数据库的操作）</div><div class="line">		&lt;property name=<span class="string">"hibernate.dialect"</span>&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;</div><div class="line">		//自动创建表</div><div class="line">		&lt;property name=<span class="string">"hibernate.hbm2ddl.auto"</span>&gt;update&lt;/property&gt;</div><div class="line">		//用于设置事务提交方式</div><div class="line">		&lt;property name=<span class="string">"hibernate.connection.autocommit"</span>&gt;<span class="literal">false</span>&lt;/property&gt;</div><div class="line">		//配置hibernate的映射文件所在位置（下面就是映射文件的配置）</div><div class="line">		&lt;mapping resource=<span class="string">"cn/itheima/domain/Customer.hbm.xml"</span> /&gt;</div><div class="line">	&lt;/session-factory&gt;</div><div class="line"></div><div class="line">&lt;/hibernate-configuration&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单的学习了Hibernate框架,一句话:看起来蛮简单，操作起来各种坑。我就把简单的环境配置搭建一遍，再把自己对Hibernate的理解总结一下。&lt;br&gt;
    
    </summary>
    
      <category term="Hibernate" scheme="http://yoursite.com/categories/Hibernate/"/>
    
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>java面向对象</title>
    <link href="http://yoursite.com/2017/06/20/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2017/06/20/java面向对象/</id>
    <published>2017-06-20T13:44:36.000Z</published>
    <updated>2017-06-28T07:20:57.803Z</updated>
    
    <content type="html"><![CDATA[<p>今天,回顾了java语言中的面向对象,总的来说,我对于面向对象实际的理论理解还是有点不足,只会简单的应用。因为对象确实太过抽象,所以我只能简单的把我自己所理解的总结一下。我把它分三个板块，让自己有个比较清晰的思路。<br><a id="more"></a></p>
<h2 id="什么是类"><a href="#什么是类" class="headerlink" title="什么是类"></a>什么是类</h2><p>类的话按照标准的规范来说就是具有相同属性和方法的一组对象的集合。<br>类的概念使我们能对属于该类的全部对象进行统一的描述，学过c语言的可以通俗的认为是一种升级版的结构体。<br>片面的说类，就是一种具有特殊性质的模板，例如说，一栋房楼的图纸，这个图纸就是一个类。所以类可以理解成为就是把现实的事物通过类来描绘出来，那怎么定义??<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//简单的举几个例子</div><div class="line">class Student&#123;......&#125; //学生的一个模板 </div><div class="line">class People&#123;......&#125;  //人的一个模板</div><div class="line">class House&#123;......&#125;   //房子的一个模板</div><div class="line">class 类名&#123;......&#125;    //公用模板</div></pre></td></tr></table></figure></p>
<h2 id="什么是对象"><a href="#什么是对象" class="headerlink" title="什么是对象"></a>什么是对象</h2><p>对象就是类的实例化，实例化就是创建一个对象。<br>通俗点说，就是通过一个模板来完成这个模板所产生的一个个体。<br>对象的作用，使我们更加方便的开发一个项目（可以理解成，让我们更快的完成一件事）。<br>举个学生学习的例子：<br>自学java：很明显，首先你需要到网上查找资料，看自己需要什么类型的书籍，这个过程是漫长的，因为java的书籍太多了，很难找到适合自己的，然后，要布置相应的java运行环境，最后，你才能正式的开始学，不说你在前面踩了多少坑，重要的是往后的学习应该有个什么样的方向，这些都是需要你发时间了解的。这过程是繁琐的。<br>所以就有了对象，你直接发钱找个好老师教你不就ok了;</p>
<h2 id="对象怎么使用"><a href="#对象怎么使用" class="headerlink" title="对象怎么使用"></a>对象怎么使用</h2><p>就拿这个老师举例,我们如何找到这个老师，首先现实社会中必须有这个老师，这个老师应该是个什么样的呢？他有名字，年龄，性别，身高等等。那他会干什么？这是最重要的一点，如果他什么都不会，那我找他干吗，这是没有意义的。为满足我们的需求，他必须会教java，是否厉害，就得看他的教学能力了，不厉害的话，使用几天就可叫他走人了，再找一个不就ok了。<br>然后我们可以用代码描绘出来每个细节，由于java没有提供这个老师类，我们必须自己定义，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">//按照上面的格式，这就是我所说的老师，我会写出他在java专有的名词解释</div><div class="line">//类(老师)</div><div class="line">class Teacher&#123;</div><div class="line">	//属性(名字，年龄，性别，身高)</div><div class="line">	String name;</div><div class="line">	int age;</div><div class="line">	String sex;</div><div class="line">	double height;</div><div class="line">	</div><div class="line">	//方法(这个老师会干嘛)</div><div class="line">	public void <span class="function"><span class="title">teach</span></span>()&#123;</div><div class="line">		System.out.println(<span class="string">"我会教java"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">//编写一个测试类(我们怎么找到他)</div><div class="line">public class Demo2 &#123;</div><div class="line">   //main方法(程序的入口)</div><div class="line">   public static void main(String[] args) &#123;</div><div class="line">	 //a.new + class名()(找到他，我们怎么接收他？(让他住我家)所以要一个变量接收，这个变量实际就是个地址值)</div><div class="line">	 //b.(这个家在那)那这个对象的类型是什么，就是一个老师类啊----》Teacher</div><div class="line">	 Teacher t1 = new Teacher();</div><div class="line">	 </div><div class="line">	 //找到对象后怎么用他，t1.方法名(变量名.方法名)</div><div class="line">	 t1.teach();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果:我会教java<br>那怎么换老师呢，自己定义一个老师类就行了。然后按着代码来一遍不就OK了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天,回顾了java语言中的面向对象,总的来说,我对于面向对象实际的理论理解还是有点不足,只会简单的应用。因为对象确实太过抽象,所以我只能简单的把我自己所理解的总结一下。我把它分三个板块，让自己有个比较清晰的思路。&lt;br&gt;
    
    </summary>
    
      <category term="java基础" scheme="http://yoursite.com/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="对象" scheme="http://yoursite.com/tags/%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>个人情感</title>
    <link href="http://yoursite.com/2017/06/20/%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/06/20/博客/</id>
    <published>2017-06-19T16:17:06.000Z</published>
    <updated>2017-06-28T06:40:18.173Z</updated>
    
    <content type="html"><![CDATA[<p>历经千辛万苦,终于搭建好自己的博客</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;历经千辛万苦,终于搭建好自己的博客&lt;/p&gt;

    
    </summary>
    
      <category term="经历" scheme="http://yoursite.com/categories/%E7%BB%8F%E5%8E%86/"/>
    
    
      <category term="记录，心情" scheme="http://yoursite.com/tags/%E8%AE%B0%E5%BD%95%EF%BC%8C%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/06/18/hello-world/"/>
    <id>http://yoursite.com/2017/06/18/hello-world/</id>
    <published>2017-06-18T09:12:00.421Z</published>
    <updated>2017-06-18T09:12:00.422Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
